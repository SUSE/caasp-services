apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-{{ .Values.registry.name }}" 
  labels:
    name: "{{ .Release.Name }}-{{ .Values.registry.name }}"
    app: {{ template "name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.registry.replicas }} 
  selector:
    matchLabels:
      name: "{{ .Release.Name }}-{{ .Values.registry.name }}"
  template:
    metadata:
      labels:
        name: "{{ .Release.Name }}-{{ .Values.registry.name }}"
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: "{{ .Release.Name }}-{{ .Values.registry.name }}"
          image: "{{ .Values.registry.image.repository }}:{{ .Values.registry.image.tag }}" 
          imagePullPolicy: {{ .Values.registry.image.pullPolicy }} 
          command: ["/bin/sh"]
          args: ["-c", "cp /certificates/portus.crt /usr/local/share/ca-certificates;update-ca-certificates;registry serve /etc/docker/registry/config.yml"]
          ports:
            - containerPort: {{ .Values.registry.port }} 
            - containerPort: {{ .Values.registry.debugPort }} 
          env:
            - name: REGISTRY_AUTH_TOKEN_REALM
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-{{ .Values.registry.name }}"
                  key: REGISTRY_AUTH_TOKEN_REALM
            - name: REGISTRY_AUTH_TOKEN_SERVICE
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-{{ .Values.registry.name }}"
                  key: REGISTRY_AUTH_TOKEN_SERVICE
            - name: REGISTRY_AUTH_TOKEN_ISSUER
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-{{ .Values.registry.name }}"
                  key: REGISTRY_AUTH_TOKEN_ISSUER
            - name: REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-{{ .Values.registry.name }}"
                  key: REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE
            - name: REGISTRY_HTTP_TLS_CERTIFICATE
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-{{ .Values.registry.name }}"
                  key: REGISTRY_HTTP_TLS_CERTIFICATE
            - name: REGISTRY_HTTP_TLS_KEY
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-{{ .Values.registry.name }}"
                  key: REGISTRY_HTTP_TLS_KEY
            - name: REGISTRY_NOTIFICATIONS_ENDPOINTS
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-{{ .Values.registry.name }}"
                  key: REGISTRY_NOTIFICATIONS_ENDPOINTS
          volumeMounts:
            - name: certvol
              mountPath: /certificates
              readOnly: true
            - name: config
              mountPath: /etc/docker/registry
              readOnly: true
            - name: storage
              mountPath: {{ .Values.registry.mountPath }}
      volumes:
        - name: certvol
          secret:
            secretName: "{{ .Release.Name }}-{{ .Values.portus.name }}"
            items:
            - key: key
              path: portus.key
            - key: cert
              path: portus.crt
        - name: config
          configMap:
            name: "{{ .Release.Name }}-{{ .Values.registry.name }}"
            items:
              - key: config
                path: config.yml
        - name: storage
          {{- if .Values.registry.persistence.enabled }}
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-{{ .Values.registry.name }}"
          {{- else }}
          emptyDir: {}
          {{- end }}
